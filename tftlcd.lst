C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TFTLCD
OBJECT MODULE PLACED IN tftlcd.obj
COMPILER INVOKED BY: F:\keil\C51\BIN\C51.EXE APP\tftlcd\tftlcd.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\模块.\User
                    -;.\Public;.\GUI;.\APP\tftlcd;.\APP\touch;.\模块) DEBUG PRINT(.\tftlcd.lst) TABS(2) OBJECT(tftlcd.obj)

line level    source

   1          #include "tftlcd.h"
   2          #include "font.h" 
   3          #include "uart.h"
   4          #include "stdlib.h"
   5          
   6          
   7          
   8          //LCD的画笔颜色和背景色    
   9          u16 FRONT_COLOR=WHITE;  //画笔颜色
  10          u16 BACK_COLOR=BLACK;  //背景色 
  11          
  12          _tftlcd_data tftlcd_data; 
  13          
  14          void Delay(unsigned int dly)
  15          {
  16   1          unsigned int i,j;
  17   1      
  18   1          for(i=0;i<dly;i++)
  19   1            for(j=0;j<255;j++);
  20   1      }
  21          //写寄存器函数
  22          //cmd:寄存器值
  23          void LCD_WriteCmd(u16 cmd)
  24          {
  25   1      #ifdef TFT20_HX8309
                unsigned char cmdH, cmdL;
                cmdH = cmd >> 8;
                cmdL = cmd & 0x00FF;
              
                TFT_WR = 1;       //初始化WR
                TFT_CS = 0;       //打开片选
                
                TFT_RD = 1;           //选择写
                TFT_RS = 0;       //选择命令
                  
                TFT_DATAPORTH = cmdH; //放置命令数据
                TFT_DATAPORTL = cmdL; //放置命令数据
              
                TFT_WR = 0;       //写入时序
                TFT_WR = 1;
                
                TFT_CS = 1;       //关闭片选
              #endif
  44   1      
  45   1      #ifdef TFT22_R61503B
                unsigned char cmdH, cmdL;
                cmdH = cmd >> 8;
                cmdL = cmd & 0x00FF;
                
                
                TFT_WR = 1;       //初始化WR
                TFT_CS = 0;       //打开片选
                
                TFT_RD = 1;           //选择写
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 2   

                TFT_RS = 0;       //选择命令
                
                
                TFT_DATAPORTH = cmdH; //放置命令数据
                TFT_WR = 0;       //写入时序
                
                TFT_WR = 1;
                TFT_DATAPORTH = cmdL;
                TFT_WR = 0;       //写入时序
                TFT_WR = 1;
                
                TFT_CS = 1;       //关闭片选 
              #endif
  68   1      
  69   1      #ifdef TFT22_ILI9225B
                TFT_WR=1;
                TFT_CS=0;
                TFT_RD=1;
                TFT_RS=0;
              
                TFT_DATAPORTH=cmd>>8;
                TFT_WR=0;
                TFT_WR=1;
              
                TFT_DATAPORTH=cmd&0x00ff;
                TFT_WR=0;
                TFT_WR=1;
              
                TFT_CS=1;
              #endif
  85   1      
  86   1      #ifdef TFT24_ST7781R  
                TFT_CS=0;
                TFT_RS=0;
                TFT_DATAPORTH=cmd>>8;
                TFT_DATAPORTL=cmd;
                TFT_WR=0;
                TFT_WR=1;
                TFT_CS=1;
              #endif
  95   1      
  96   1      #ifdef TFT26_R61509V  
                TFT_CS=0;
                TFT_RS=0;
                TFT_DATAPORTH=cmd>>8;
                TFT_DATAPORTL=cmd;
                TFT_WR=0;
                TFT_WR=1;
                TFT_CS=1;
              #endif
 105   1      
 106   1      #ifdef TFT26_ILI9325D 
                TFT_WR=1;
                TFT_CS=0;
                TFT_RD=1;
                TFT_RS=0;
              
                TFT_DATAPORTL=cmd>>8;
                TFT_WR=0;
                TFT_WR=1;
              
                TFT_DATAPORTL=cmd&0x00ff;
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 3   

                TFT_WR=0;
                TFT_WR=1;
              
                TFT_CS=1;
              #endif
 122   1      
 123   1      #ifdef TFT24_ST7789S  
                TFT_WR=1;
                TFT_CS=0;
                TFT_RD=1;
                TFT_RS=0;
                TFT_DATAPORTH=cmd;
                TFT_WR=0;
                TFT_WR=1;
                TFT_CS=1;
              #endif
 133   1      
 134   1      #ifdef TFT24_SSD1297  
 135   1        TFT_CS=0;
 136   1        TFT_RS=0;
 137   1        TFT_DATAPORTH=cmd>>8;
 138   1        TFT_DATAPORTL=cmd;
 139   1        TFT_WR=0;
 140   1        TFT_WR=1;
 141   1        TFT_CS=1;
 142   1      #endif
 143   1      
 144   1      #ifdef TFT20_ILI9225
                TFT_WR=1;
                TFT_CS=0;
                TFT_RD=1;
                TFT_RS=0;
              
                TFT_DATAPORTH=cmd>>8;
                TFT_WR=0;
                TFT_WR=1;
              
                TFT_DATAPORTH=cmd&0x00ff;
                TFT_WR=0;
                TFT_WR=1;
              
                TFT_CS=1;
              #endif
 160   1      
 161   1      #ifdef TFT20_ILI9341
                TFT_WR=1;
                TFT_CS=0;
                TFT_RD=1;
                TFT_RS=0;
                TFT_DATAPORTH=cmd;
                TFT_WR=0;
                TFT_WR=1;
                TFT_CS=1;
              #endif
 171   1      
 172   1      #ifdef TFT20_ST7775R  
                TFT_CS=0;
                TFT_RS=0;
                TFT_DATAPORTH=cmd>>8;
                TFT_DATAPORTL=cmd;
                TFT_WR=0;
                TFT_WR=1;
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 4   

                TFT_CS=1;
              #endif
 181   1      
 182   1      #ifdef TFT20_ST7775RV 
                TFT_WR=1;
                TFT_CS=0;
                TFT_RD=1;
                TFT_RS=0;
              
                TFT_DATAPORTL=cmd>>8;
                TFT_WR=0;
                TFT_WR=1;
              
                TFT_DATAPORTL=cmd&0x00ff;
                TFT_WR=0;
                TFT_WR=1;
              
                TFT_CS=1;
              #endif
 198   1      
 199   1      #ifdef TFT20_ILI9225C
                TFT_WR=1;
                TFT_CS=0;
                TFT_RD=1;
                TFT_RS=0;
              
                TFT_DATAPORTL=cmd>>8;
                TFT_WR=0;
                TFT_WR=1;
              
                TFT_DATAPORTL=cmd&0x00ff;
                TFT_WR=0;
                TFT_WR=1;
              
                TFT_CS=1;
              #endif
 215   1      
 216   1      #ifdef TFT20_R61503U  
                TFT_CS=0;
                TFT_RS=0;
                TFT_DATAPORTH=cmd>>8;
                TFT_DATAPORTL=cmd;
                TFT_WR=0;
                TFT_WR=1;
                TFT_CS=1;
              #endif
 225   1      
 226   1      #ifdef TFT20_HX8340B
                TFT_WR=1;
                TFT_CS=0;
                TFT_RD=1;
                TFT_RS=0;
                TFT_DATAPORTH=cmd;
                TFT_WR=0;
                TFT_WR=1;
                TFT_CS=1;
              #endif
 236   1      
 237   1      #ifdef TFT24_HX8357A  
                TFT_CS=0;
                TFT_RS=0;
                TFT_DATAPORTH=cmd>>8;
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 5   

                TFT_DATAPORTL=cmd;
                TFT_WR=0;
                TFT_WR=1;
                TFT_CS=1;
              #endif
 246   1      
 247   1      #ifdef TFT18_S6D0144  
                TFT_CS=0;
                TFT_RS=0;
                TFT_DATAPORTH=cmd>>8;
                TFT_DATAPORTL=cmd;
                TFT_WR=0;
                TFT_WR=1;
                TFT_CS=1;
              #endif
 256   1      }
 257          
 258          //写数据
 259          //dat:要写入的值
 260          void LCD_WriteData(u16 dat)
 261          {
 262   1      #ifdef TFT20_HX8309
                unsigned char datH, datL;
                datH = dat >> 8;
                datL = dat & 0x00FF;
              
                TFT_WR = 1;       //初始化WR
                TFT_CS = 0;       //打开片选
                
                TFT_RD = 1;           //选择写
                TFT_RS = 1;       //选择发送数据
                  
                TFT_DATAPORTH = datH;  //放置命令数据
                TFT_DATAPORTL = datL;  //放置命令数据
              
                TFT_WR = 0;       //写入时序
                TFT_WR = 1;
                
                TFT_CS = 1;       //关闭片选
              #endif
 281   1      
 282   1      #ifdef TFT22_R61503B
                unsigned char datH, datL;
                datH = dat >> 8;
                datL = dat & 0xFF;
                
                TFT_WR = 1;       //初始化WR
                TFT_CS = 0;       //打开片选
                  
                TFT_RD = 1;           //选择写
                TFT_RS = 1;       //选择发送数据
                
              
                TFT_DATAPORTH = datH;  //放置命令数据
                TFT_WR = 0;       //写入时序
                TFT_WR = 1;
              
                TFT_DATAPORTH = datL; 
              
                TFT_WR = 0;       //写入时序
                TFT_WR = 1;
                
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 6   

                 TFT_CS = 1;        //关闭片选
              #endif
 305   1      #ifdef TFT22_ILI9225B
                TFT_WR=1;
                TFT_CS=0;
                TFT_RD=1;
                TFT_RS=1;
                   
                TFT_DATAPORTH=dat>>8;
                TFT_WR=0;
                TFT_WR=1;
                TFT_DATAPORTH=dat&0x00ff;
                TFT_WR=0;
                TFT_WR=1;
              
                TFT_CS=1; 
              #endif
 320   1      
 321   1      #ifdef TFT24_ST7781R
                TFT_CS=0;
                TFT_RS=1;  
                TFT_DATAPORTH=dat>>8;
                TFT_DATAPORTL=dat;
                TFT_WR=0;
                TFT_WR=1;
                TFT_CS=1; 
              #endif
 330   1      
 331   1      #ifdef TFT26_R61509V
                TFT_CS=0;
                TFT_RS=1;  
                TFT_DATAPORTH=dat>>8;
                TFT_DATAPORTL=dat;
                TFT_WR=0;
                TFT_WR=1;
                TFT_CS=1; 
              #endif  
 340   1      
 341   1      #ifdef TFT26_ILI9325D
                TFT_WR=1;
                TFT_CS=0;
                TFT_RD=1;
                TFT_RS=1;
                   
                TFT_DATAPORTL=dat>>8;
                TFT_WR=0;
                TFT_WR=1;
                TFT_DATAPORTL=dat&0x00ff;
                TFT_WR=0;
                TFT_WR=1;
              
                TFT_CS=1; 
              #endif
 356   1      
 357   1      #ifdef TFT24_ST7789S  
                TFT_WR=1;
                TFT_CS=0;
                TFT_RD=1;
                TFT_RS=1;
                TFT_DATAPORTH=dat;
                TFT_WR=0;
                TFT_WR=1;
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 7   

                TFT_CS=1;
              #endif
 367   1      
 368   1      #ifdef TFT24_SSD1297
 369   1        TFT_CS=0;
 370   1        TFT_RS=1;  
 371   1        TFT_DATAPORTH=dat>>8;
 372   1        TFT_DATAPORTL=dat;
 373   1        TFT_WR=0;
 374   1        TFT_WR=1;
 375   1        TFT_CS=1; 
 376   1      #endif
 377   1      
 378   1      #ifdef TFT20_ILI9225
                TFT_WR=1;
                TFT_CS=0;
                TFT_RD=1;
                TFT_RS=1;
                   
                TFT_DATAPORTH=dat>>8;
                TFT_WR=0;
                TFT_WR=1;
                TFT_DATAPORTH=dat&0xff;
                TFT_WR=0;
                TFT_WR=1;
              
                TFT_CS=1; 
              #endif
 393   1      
 394   1      #ifdef TFT20_ILI9341
                TFT_WR=1;
                TFT_CS=0;
                TFT_RD=1;
                TFT_RS=1;
                TFT_DATAPORTH=dat;
                TFT_WR=0;
                TFT_WR=1;
                TFT_CS=1; 
              #endif
 404   1      
 405   1      #ifdef TFT20_ST7775R
                TFT_CS=0;
                TFT_RS=1;  
                TFT_DATAPORTH=dat>>8;
                TFT_DATAPORTL=dat;
                TFT_WR=0;
                TFT_WR=1;
                TFT_CS=1; 
              #endif
 414   1      
 415   1      #ifdef TFT20_ST7775RV
                TFT_WR=1;
                TFT_CS=0;
                TFT_RD=1;
                TFT_RS=1;
                   
                TFT_DATAPORTL=dat>>8;
                TFT_WR=0;
                TFT_WR=1;
                TFT_DATAPORTL=dat&0x00ff;
                TFT_WR=0;
                TFT_WR=1;
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 8   

              
                TFT_CS=1; 
              #endif
 430   1      
 431   1      #ifdef TFT20_ILI9225C
                TFT_WR=1;
                TFT_CS=0;
                TFT_RD=1;
                TFT_RS=1;
                   
                TFT_DATAPORTL=dat>>8;
                TFT_WR=0;
                TFT_WR=1;
                TFT_DATAPORTL=dat&0x00ff;
                TFT_WR=0;
                TFT_WR=1;
              
                TFT_CS=1; 
              #endif
 446   1      
 447   1      #ifdef TFT20_R61503U
                TFT_CS=0;
                TFT_RS=1;  
                TFT_DATAPORTH=dat>>8;
                TFT_DATAPORTL=dat;
                TFT_WR=0;
                TFT_WR=1;
                TFT_CS=1; 
              #endif
 456   1      
 457   1      #ifdef TFT20_HX8340B
                TFT_WR=1;
                TFT_CS=0;
                TFT_RD=1;
                TFT_RS=1;
                TFT_DATAPORTH=dat;
                TFT_WR=0;
                TFT_WR=1;
                TFT_CS=1; 
              #endif
 467   1      
 468   1      #ifdef TFT24_HX8357A
                TFT_CS=0;
                TFT_RS=1;  
                TFT_DATAPORTH=dat>>8;
                TFT_DATAPORTL=dat;
                TFT_WR=0;
                TFT_WR=1;
                TFT_CS=1; 
              #endif
 477   1      
 478   1      #ifdef TFT18_S6D0144
                TFT_CS=0;
                TFT_RS=1;  
                TFT_DATAPORTH=dat>>8;
                TFT_DATAPORTL=dat;
                TFT_WR=0;
                TFT_WR=1;
                TFT_CS=1; 
              #endif  
 487   1      }
 488          
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 9   

 489          void LCD_WriteData_Color(u16 color)
 490          {
 491   1      #ifdef TFT20_HX8309
                unsigned char datH, datL;
                datH = color >> 8;
                datL = color & 0x00FF;
              
                TFT_WR = 1;       //初始化WR
                TFT_CS = 0;       //打开片选
                
                TFT_RD = 1;           //选择写
                TFT_RS = 1;       //选择发送数据
                  
                TFT_DATAPORTH = datH;  //放置命令数据
                TFT_DATAPORTL = datL;  //放置命令数据
              
                TFT_WR = 0;       //写入时序
                TFT_WR = 1;
                
                TFT_CS = 1;       //关闭片选
              #endif
 510   1      
 511   1      #ifdef TFT22_R61503B
                 unsigned char datH, datL;
                datH = color >> 8;
                datL = color & 0xFF;
                
                TFT_WR = 1;       //初始化WR
                TFT_CS = 0;       //打开片选
                  
                TFT_RD = 1;           //选择写
                TFT_RS = 1;       //选择发送数据
                
              
                TFT_DATAPORTH = datH;  //放置命令数据
                TFT_WR = 0;       //写入时序
                TFT_WR = 1;
              
                TFT_DATAPORTH = datL; 
              
                TFT_WR = 0;       //写入时序
                TFT_WR = 1;
                
                 TFT_CS = 1;        //关闭片选
              #endif
 534   1      #ifdef TFT22_ILI9225B
                TFT_WR=1;
                TFT_CS=0;
                TFT_RD=1;
                TFT_RS=1;
                   
                TFT_DATAPORTH=color>>8;
                TFT_WR=0;
                TFT_WR=1;
                TFT_DATAPORTH=color&0x00ff;
                TFT_WR=0;
                TFT_WR=1;
              
                TFT_CS=1; 
              #endif
 549   1      
 550   1      #ifdef TFT24_ST7781R
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 10  

                TFT_CS=0;
                TFT_RS=1;  
                TFT_DATAPORTH=color>>8;
                TFT_DATAPORTL=color;
                TFT_WR=0;
                TFT_WR=1;
                TFT_CS=1; 
              #endif
 559   1      
 560   1      #ifdef TFT26_R61509V
                TFT_CS=0;
                TFT_RS=1;  
                TFT_DATAPORTH=color>>8;
                TFT_DATAPORTL=color;
                TFT_WR=0;
                TFT_WR=1;
                TFT_CS=1; 
              #endif
 569   1      
 570   1      #ifdef TFT26_ILI9325D
                TFT_WR=1;
                TFT_CS=0;
                TFT_RD=1;
                TFT_RS=1;
                   
                TFT_DATAPORTL=color>>8;
                TFT_WR=0;
                TFT_WR=1;
                TFT_DATAPORTL=color&0x00ff;
                TFT_WR=0;
                TFT_WR=1;
              
                TFT_CS=1; 
              #endif
 585   1      
 586   1      #ifdef TFT24_ST7789S
                TFT_WR=1;
                TFT_CS=0;
                TFT_RD=1;
                TFT_RS=1;  
                TFT_DATAPORTH=color>>8;
                TFT_WR = 0;       
                TFT_WR = 1;
                TFT_DATAPORTH=color&0xFF;
                TFT_WR=0;
                TFT_WR=1;
                TFT_CS=1; 
              #endif
 599   1      
 600   1      #ifdef TFT24_SSD1297
 601   1        TFT_CS=0;
 602   1        TFT_RS=1;  
 603   1        TFT_DATAPORTH=color>>8;
 604   1        TFT_DATAPORTL=color;
 605   1        TFT_WR=0;
 606   1        TFT_WR=1;
 607   1        TFT_CS=1; 
 608   1      #endif
 609   1      
 610   1      #ifdef TFT20_ILI9225
                TFT_WR=1;
                TFT_CS=0;
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 11  

                TFT_RD=1;
                TFT_RS=1;
                   
                TFT_DATAPORTH=color>>8;
                TFT_WR=0;
                TFT_WR=1;
                TFT_DATAPORTH=color&0x00ff;
                TFT_WR=0;
                TFT_WR=1;
              
                TFT_CS=1; 
              #endif
 625   1      
 626   1      #ifdef TFT20_ILI9341
                TFT_WR=1;
                TFT_CS=0;
                TFT_RD=1;
                TFT_RS=1;
                   
                TFT_DATAPORTH=color>>8;
                TFT_WR=0;
                TFT_WR=1;
                TFT_DATAPORTH=color&0x00ff;
                TFT_WR=0;
                TFT_WR=1;
              
                TFT_CS=1; 
              #endif
 641   1      
 642   1      #ifdef TFT20_ST7775R
                TFT_CS=0;
                TFT_RS=1;  
                TFT_DATAPORTH=color>>8;
                TFT_DATAPORTL=color;
                TFT_WR=0;
                TFT_WR=1;
                TFT_CS=1; 
              #endif
 651   1      
 652   1      #ifdef TFT20_ST7775RV
                TFT_WR=1;
                TFT_CS=0;
                TFT_RD=1;
                TFT_RS=1;
                   
                TFT_DATAPORTL=color>>8;
                TFT_WR=0;
                TFT_WR=1;
                TFT_DATAPORTL=color&0x00ff;
                TFT_WR=0;
                TFT_WR=1;
              
                TFT_CS=1; 
              #endif
 667   1      
 668   1      #ifdef TFT20_ILI9225C
                TFT_WR=1;
                TFT_CS=0;
                TFT_RD=1;
                TFT_RS=1;
                   
                TFT_DATAPORTL=color>>8;
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 12  

                TFT_WR=0;
                TFT_WR=1;
                TFT_DATAPORTL=color&0x00ff;
                TFT_WR=0;
                TFT_WR=1;
              
                TFT_CS=1; 
              #endif
 683   1      
 684   1      #ifdef TFT20_R61503U
                TFT_CS=0;
                TFT_RS=1;  
                TFT_DATAPORTH=color>>8;
                TFT_DATAPORTL=color;
                TFT_WR=0;
                TFT_WR=1;
                TFT_CS=1; 
              #endif
 693   1      
 694   1      #ifdef TFT20_HX8340B
                TFT_WR=1;
                TFT_CS=0;
                TFT_RD=1;
                TFT_RS=1;
                   
                TFT_DATAPORTH=color>>8;
                TFT_WR=0;
                TFT_WR=1;
                TFT_DATAPORTH=color&0x00ff;
                TFT_WR=0;
                TFT_WR=1;
              
                TFT_CS=1; 
              #endif
 709   1      
 710   1      #ifdef TFT24_HX8357A
                TFT_CS=0;
                TFT_RS=1;  
                TFT_DATAPORTH=color>>8;
                TFT_DATAPORTL=color;
                TFT_WR=0;
                TFT_WR=1;
                TFT_CS=1; 
              #endif
 719   1      
 720   1      #ifdef TFT18_S6D0144
                TFT_CS=0;
                TFT_RS=1;  
                TFT_DATAPORTH=color>>8;
                TFT_DATAPORTL=color;
                TFT_WR=0;
                TFT_WR=1;
                TFT_CS=1; 
              #endif  
 729   1      }
 730          
 731          void LCD_WriteCmdData(u16 cmd,u16 dat)
 732          {
 733   1        LCD_WriteCmd(cmd);
 734   1        LCD_WriteData(dat);
 735   1      }
 736          
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 13  

 737          //读数据
 738          //返回值:读到的值
 739          u16 LCD_ReadData(void)
 740          {
 741   1        u16 ram;
 742   1      
 743   1        TFT_DATAPORTH=0xff;
 744   1        TFT_DATAPORTL=0xff;
 745   1      
 746   1      #ifdef TFT20_HX8309
                TFT_CS=0;
                TFT_RS=1;
                TFT_RD=0;
                _nop_();
                ram=TFT_DATAPORTH;
                ram<<=8;
                ram|=TFT_DATAPORTL;
                TFT_RD=1; 
                TFT_CS=1;
              #endif
 757   1      
 758   1      #ifdef TFT22_R61503B
                
                TFT_CS=0;
                TFT_RS=1;
                TFT_RD=0;
                _nop_();
                ram=TFT_DATAPORTH;
                ram<<=8;  
              
                TFT_RD=1; 
                TFT_RD=0;
                _nop_();
                ram|=TFT_DATAPORTH;
                TFT_RD=1;
                TFT_CS=1;
              #endif
 774   1      
 775   1      #ifdef TFT22_ILI9225B
                TFT_CS=0;
                TFT_RS=1;
                TFT_RD=0;
                _nop_();
                ram=TFT_DATAPORTH;
                ram<<=8;  
              
                TFT_RD=1; 
                TFT_RD=0;
                _nop_();
                ram|=TFT_DATAPORTH;
                TFT_RD=1;
                TFT_CS=1;
              #endif
 790   1      
 791   1      #ifdef TFT24_ST7781R
                TFT_CS=0;
                TFT_RS=1;
                TFT_RD=0;
                _nop_();
                ram=TFT_DATAPORTH;
                ram<<=8;
                ram|=TFT_DATAPORTL;  
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 14  

                TFT_RD=1;
                TFT_CS=1;
              #endif
 802   1      
 803   1      #ifdef TFT26_R61509V
                TFT_CS=0;
                TFT_RS=1;
                TFT_RD=0;
                _nop_();
                ram=TFT_DATAPORTH;
                ram<<=8;
                ram|=TFT_DATAPORTL;
                TFT_RD=1; 
                TFT_CS=1;
              #endif
 814   1      
 815   1      #ifdef TFT26_ILI9325D
                TFT_CS=0;
                TFT_RS=1;
                TFT_RD=0;
                _nop_();
                ram=TFT_DATAPORTL;
                ram<<=8;
                ram|=TFT_DATAPORTL;
                TFT_RD=1; 
                TFT_CS=1;
              #endif
 826   1      
 827   1      #ifdef TFT24_ST7789S  
                TFT_CS=0;
                TFT_RS=1;
                TFT_RD=0;
                _nop_();
                ram=TFT_DATAPORTH;  
                TFT_RD=1;
                TFT_CS=1;
              #endif
 836   1      
 837   1      #ifdef TFT24_SSD1297
 838   1        TFT_CS=0;
 839   1        TFT_RS=1;
 840   1        TFT_RD=0;
 841   1        _nop_();
 842   1        ram=TFT_DATAPORTH;
 843   1        ram<<=8;
 844   1        ram|=TFT_DATAPORTL;
 845   1        TFT_RD=1; 
 846   1        TFT_CS=1;
 847   1      #endif
 848   1      
 849   1      #ifdef TFT20_ILI9225
                TFT_CS=0;
                TFT_RS=1;
                TFT_RD=0;
                _nop_();
                ram=TFT_DATAPORTH;
                ram<<=8;  
              
                TFT_RD=1; 
                TFT_RD=0;
                _nop_();
                ram|=TFT_DATAPORTH;
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 15  

                TFT_RD=1;
                TFT_CS=1;
              #endif
 864   1      
 865   1      #ifdef TFT20_ILI9341
                TFT_CS=0;
                TFT_RS=1;
                TFT_RD=0;
                _nop_();
                ram=TFT_DATAPORTH;
                ram<<=8;  
              
                TFT_RD=1; 
                TFT_RD=0;
                _nop_();
                ram|=TFT_DATAPORTH;
                TFT_RD=1;
                TFT_CS=1;
              #endif
 880   1      
 881   1      #ifdef TFT20_ST7775R
                TFT_CS=0;
                TFT_RS=1;
                TFT_RD=0;
                _nop_();
                ram=TFT_DATAPORTH;
                ram<<=8;
                ram|=TFT_DATAPORTL;
                TFT_RD=1; 
                TFT_CS=1;
              #endif
 892   1      
 893   1      #ifdef TFT20_ST7775RV
                TFT_CS=0;
                TFT_RS=1;
                TFT_RD=0;
                _nop_();
                ram=TFT_DATAPORTL;
                ram<<=8;
                ram|=TFT_DATAPORTL;
                TFT_RD=1; 
                TFT_CS=1;
              #endif
 904   1      
 905   1      #ifdef TFT20_ILI9225C
                TFT_CS=0;
                TFT_RS=1;
                TFT_RD=0;
                _nop_();
                ram=TFT_DATAPORTL;
                ram<<=8;  
              
                TFT_RD=1; 
                TFT_RD=0;
                _nop_();
                ram|=TFT_DATAPORTL;
                TFT_RD=1;
                TFT_CS=1;
              #endif
 920   1      
 921   1      #ifdef TFT20_R61503U
                TFT_CS=0;
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 16  

                TFT_RS=1;
                TFT_RD=0;
                _nop_();
                ram=TFT_DATAPORTH;
                ram<<=8;
                ram|=TFT_DATAPORTL;
                TFT_RD=1; 
                TFT_CS=1;
              #endif
 932   1      
 933   1      #ifdef TFT20_HX8340B
                TFT_CS=0;
                TFT_RS=1;
                TFT_RD=0;
                _nop_();
                ram=TFT_DATAPORTH;
                ram<<=8;  
              
                TFT_RD=1; 
                TFT_RD=0;
                _nop_();
                ram|=TFT_DATAPORTH;
                TFT_RD=1;
                TFT_CS=1;
              #endif
 948   1      
 949   1      #ifdef TFT24_HX8357A
                TFT_CS=0;
                TFT_RS=1;
                TFT_RD=0;
                _nop_();
                ram=TFT_DATAPORTH;
                ram<<=8;
                ram|=TFT_DATAPORTL;
                TFT_RD=1; 
                TFT_CS=1;
              #endif
 960   1      
 961   1      #ifdef TFT18_S6D0144
                TFT_CS=0;
                TFT_RS=1;
                TFT_RD=0;
                _nop_();
                ram=TFT_DATAPORTH;
                ram<<=8;
                ram|=TFT_DATAPORTL;
                TFT_RD=1; 
                TFT_CS=1;
              #endif
 972   1      
 973   1        return ram; 
 974   1      }
 975          
 976          //设置LCD显示方向
 977          //dir:0,竖屏；1,横屏
 978          void LCD_Display_Dir(u8 dir)
 979          {
 980   1        tftlcd_data.dir=dir;
 981   1        if(dir==0)  //默认竖屏方向
 982   1        {
 983   2      #ifdef TFT20_HX8309
                  LCD_WriteCmdData(0x0001,0x011b); //Output Direct
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 17  

              #endif
 986   2      #ifdef TFT22_R61503B
                  LCD_WriteCmdData(0x0001,0x0500); //Output Direct
                  LCD_WriteCmdData(0x0003, 0x1030);   //设置彩屏显示方向的寄存器
              #endif
 990   2      #ifdef TFT22_ILI9225B   
                  LCD_WriteCmdData(0x0001, 0x011C); //Output Direct
                  LCD_WriteCmdData(0x0003, 0x1030);   //设置彩屏显示方向的寄存器
              #endif
 994   2      
 995   2      #ifdef TFT24_ST7781R    
                  LCD_WriteCmdData(0x0001, 0x0100); //Output Direct
                  LCD_WriteCmd(0x0003);   //设置彩屏显示方向的寄存器
                  LCD_WriteData(0x5030);
              #endif
1000   2      
1001   2      #ifdef TFT26_R61509V    
                  LCD_WriteCmdData(0x0001, 0x0100); //Output Direct
                  LCD_WriteCmdData(0x0003, 0x1030);   //设置彩屏显示方向的寄存器
              #endif
1005   2      
1006   2      #ifdef TFT26_ILI9325D   
                  LCD_WriteCmdData(0x0001, 0x0100); //Output Direct
                  LCD_WriteCmdData(0x0003, 0x1030);   //设置彩屏显示方向的寄存器
              #endif
1010   2      
1011   2      #ifdef TFT24_ST7789S
                  LCD_WriteCmdData(0x36,0x10); ///设置彩屏显示方向的寄存器  
              #endif
1014   2      
1015   2      #ifdef TFT24_SSD1297
1016   2          LCD_WriteCmdData(0x0011, 0x6830); //Output Direct   
1017   2          LCD_WriteCmdData(0x0001, 0x2B3F); //Output Direct
1018   2      #endif
1019   2      
1020   2      #ifdef TFT20_ILI9225    
                  LCD_WriteCmdData(0x0001, 0x011C); //Output Direct
                  LCD_WriteCmdData(0x0003, 0x1030);   //设置彩屏显示方向的寄存器
              #endif
1024   2      
1025   2      #ifdef TFT20_ILI9341    
                  LCD_WriteCmdData(0x36, 0x08); //Output Direct
              #endif
1028   2      
1029   2      #ifdef TFT20_ST7775R
                  LCD_WriteCmdData(0x01, 0x011C); //Output Direct
                  LCD_WriteCmdData(0x03, 0x1030); //Output Direct   
              #endif
1033   2      
1034   2      #ifdef TFT20_ST7775RV
                  LCD_WriteCmdData(0x01, 0x011C); //Output Direct
                  LCD_WriteCmdData(0x03, 0x1030); //Output Direct   
              #endif
1038   2      
1039   2      #ifdef TFT20_ILI9225C   
                  LCD_WriteCmdData(0x0001, 0x011C); //Output Direct
                  LCD_WriteCmdData(0x0003, 0x1030);   //设置彩屏显示方向的寄存器
              #endif
1043   2      
1044   2      #ifdef TFT20_R61503U    
                  LCD_WriteCmdData(0x0001, 0x0100); //Output Direct
                  LCD_WriteCmdData(0x0003, 0x1030);   //设置彩屏显示方向的寄存器
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 18  

              #endif
1048   2      
1049   2      #ifdef TFT20_HX8340B    
                  LCD_WriteCmdData(0x01, 0x00); //Output Direct
              #endif
1052   2      
1053   2      #ifdef TFT24_HX8357A    
                  LCD_WriteCmdData(0x16,0x08);
              #endif
1056   2      
1057   2      #ifdef TFT18_S6D0144    
                  LCD_WriteCmdData(0x03,0x1030);
              #endif
1060   2      
1061   2          tftlcd_data.height=HEIGHT;
1062   2          tftlcd_data.width=WIDTH;    
1063   2        }
1064   1        else
1065   1        {
1066   2      #ifdef TFT20_HX8309
                    LCD_WriteCmdData(0x0001, 0x001b); //Output Direct
              #endif
1069   2      
1070   2      #ifdef TFT22_R61503B
                    LCD_WriteCmdData(0x0001, 0x0400); //Output Direct
                  LCD_WriteCmdData(0x0003, 0x1038);   //设置彩屏显示方向的寄存器#endif
              #endif
1074   2      
1075   2      #ifdef TFT22_ILI9225B   
                  LCD_WriteCmdData(0x0001, 0x031C); //Output Direct
                  LCD_WriteCmdData(0x0003, 0x1038);   //设置彩屏显示方向的寄存器#endif
              #endif
1079   2      
1080   2      #ifdef TFT24_ST7781R
                  LCD_WriteCmdData(0x0001, 0x0000); //Output Direct   
                  LCD_WriteCmd(0x0003);   //设置彩屏显示方向的寄存器
                  LCD_WriteData(0x5038);
              #endif
1085   2      
1086   2      #ifdef TFT26_R61509V    
                  LCD_WriteCmdData(0x0001, 0x0000); //Output Direct
                  LCD_WriteCmdData(0x0003, 0x1038);   //设置彩屏显示方向的寄存器
              #endif
1090   2      
1091   2      #ifdef TFT26_ILI9325D   
                  LCD_WriteCmdData(0x0001, 0x0000); //Output Direct
                  LCD_WriteCmdData(0x0003, 0x1038);   //设置彩屏显示方向的寄存器
              #endif
1095   2      
1096   2      #ifdef TFT24_ST7789S    
                  LCD_WriteCmdData(0x36,0x60); ///设置彩屏显示方向的寄存器
              #endif
1099   2      
1100   2      #ifdef TFT24_SSD1297    
1101   2          LCD_WriteCmdData(0x0011, 0x6838); //Output Direct
1102   2          LCD_WriteCmdData(0x0001, 0x6B3F); //Output Direct
1103   2      #endif
1104   2      
1105   2      #ifdef TFT20_ILI9225    
                  LCD_WriteCmdData(0x0001, 0x031C); //Output Direct
                  LCD_WriteCmdData(0x0003, 0x1038);   //设置彩屏显示方向的寄存器#endif
              #endif
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 19  

1109   2      
1110   2      #ifdef TFT20_ILI9341    
                  LCD_WriteCmdData(0x36, 0x68); //Output Direct
              #endif
1113   2      
1114   2      #ifdef TFT20_ST7775R
                  LCD_WriteCmdData(0x01, 0x031C); //Output Direct
                  LCD_WriteCmdData(0x03, 0x1038); //Output Direct
              #endif
1118   2      
1119   2      #ifdef TFT20_ST7775RV
                  LCD_WriteCmdData(0x01, 0x031C); //Output Direct
                  LCD_WriteCmdData(0x03, 0x1038); //Output Direct
              #endif
1123   2      
1124   2      #ifdef TFT20_ILI9225C   
                  LCD_WriteCmdData(0x0001, 0x031C); //Output Direct
                  LCD_WriteCmdData(0x0003, 0x1038);   //设置彩屏显示方向的寄存器#endif
              #endif
1128   2      
1129   2      #ifdef TFT20_R61503U    
                  LCD_WriteCmdData(0x0001, 0x031C); //Output Direct
                  LCD_WriteCmdData(0x0003, 0x1038);   //设置彩屏显示方向的寄存器
              #endif
1133   2      
1134   2      #ifdef TFT20_HX8340B    
                  LCD_WriteCmdData(0x01, 0x00); //Output Direct
              #endif
1137   2      
1138   2      #ifdef TFT24_HX8357A    
                  LCD_WriteCmdData(0x16,0x48);//0x48
              #endif
1141   2      
1142   2      #ifdef TFT18_S6D0144
                  LCD_WriteCmdData(0x03,0x1018);
                  LCD_WriteCmdData(0x01,0x0714);
              #endif
1146   2      
1147   2            tftlcd_data.height=WIDTH;
1148   2          tftlcd_data.width=HEIGHT;
1149   2        }
1150   1      }
1151          
1152          
1153          void TFTLCD_Init(void)
1154          {
1155   1        u16 i=0;
1156   1        TFT_RST=1;  
1157   1        delay_ms(100);
1158   1        
1159   1        TFT_RST=0;
1160   1        delay_ms(100);
1161   1      
1162   1        TFT_RST=1;
1163   1        delay_ms(100);
1164   1      
1165   1      
1166   1      
1167   1        LCD_WriteCmd(0X0000);         
1168   1        tftlcd_data.id=LCD_ReadData();    
1169   1      
1170   1      
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 20  

1171   1      
1172   1        LCD_WriteCmd(0x0000);LCD_WriteData(0x0001);//打开晶振
1173   1        delay_ms(500);
1174   1        
1175   1        LCD_WriteCmd(0x0003);LCD_WriteData(0x0003);//0xA8A4
1176   1        LCD_WriteCmd(0x000C);LCD_WriteData(0x0000);    
1177   1        LCD_WriteCmd(0x000D);LCD_WriteData(0x080C);   
1178   1        LCD_WriteCmd(0x000E);LCD_WriteData(0x2b000);//2B00    
1179   1        LCD_WriteCmd(0x001E);LCD_WriteData(0x00B0); 
1180   1        delay_ms(500);
1181   1        
1182   1        LCD_WriteCmd(0x0001);LCD_WriteData(0x693F);//驱动输出控制320*240  0x6B3F  0x2B3F
1183   1        LCD_WriteCmd(0x0002);LCD_WriteData(0x0600);
1184   1        LCD_WriteCmd(0x0010);LCD_WriteData(0x0000);  
1185   1        LCD_WriteCmd(0x0011);LCD_WriteData(0x6830); //定义数据格式  16位色  横屏 0x6058   0x6078
1186   1        LCD_WriteCmd(0x0005);LCD_WriteData(0x0000);  
1187   1        LCD_WriteCmd(0x0006);LCD_WriteData(0x0000);  
1188   1        LCD_WriteCmd(0x0016);LCD_WriteData(0xEF1C);  
1189   1        LCD_WriteCmd(0x0017);LCD_WriteData(0x0003);  
1190   1        LCD_WriteCmd(0x0007);LCD_WriteData(0x0233); //0x0233       
1191   1        LCD_WriteCmd(0x000B);LCD_WriteData(0x0000);  
1192   1        delay_ms(500);
1193   1        
1194   1        LCD_WriteCmd(0x000F);LCD_WriteData(0x0000); //扫描开始地址
1195   1        LCD_WriteCmd(0x0041);LCD_WriteData(0x0000);  
1196   1        LCD_WriteCmd(0x0042);LCD_WriteData(0x0000);  
1197   1        LCD_WriteCmd(0x0048);LCD_WriteData(0x0000);  
1198   1        LCD_WriteCmd(0x0049);LCD_WriteData(0x013F);  
1199   1        LCD_WriteCmd(0x004A);LCD_WriteData(0x0000);  
1200   1        LCD_WriteCmd(0x004B);LCD_WriteData(0x0000); 
1201   1         
1202   1        LCD_WriteCmd(0x0044);LCD_WriteData(0xEF00);  
1203   1        LCD_WriteCmd(0x0045);LCD_WriteData(0x0000);  
1204   1        LCD_WriteCmd(0x0046);LCD_WriteData(0x013F); 
1205   1         
1206   1        LCD_WriteCmd(0x0030);LCD_WriteData(0x0707);  
1207   1        LCD_WriteCmd(0x0031);LCD_WriteData(0x0204);  
1208   1        LCD_WriteCmd(0x0032);LCD_WriteData(0x0204);  
1209   1        LCD_WriteCmd(0x0033);LCD_WriteData(0x0502);  
1210   1        LCD_WriteCmd(0x0034);LCD_WriteData(0x0507);  
1211   1        LCD_WriteCmd(0x0035);LCD_WriteData(0x0204);  
1212   1        LCD_WriteCmd(0x0036);LCD_WriteData(0x0204);  
1213   1        LCD_WriteCmd(0x0037);LCD_WriteData(0x0502);  
1214   1        LCD_WriteCmd(0x003A);LCD_WriteData(0x0302);  
1215   1        LCD_WriteCmd(0x003B);LCD_WriteData(0x0302);  
1216   1        LCD_WriteCmd(0x0023);LCD_WriteData(0x0000);  
1217   1        LCD_WriteCmd(0x0024);LCD_WriteData(0x0000);  
1218   1        LCD_WriteCmd(0x0025);LCD_WriteData(0x8000);  
1219   1        
1220   1        LCD_WriteCmd(0x004f);LCD_WriteData(0x0000);        //行首址0
1221   1        LCD_WriteCmd(0x004e);LCD_WriteData(0x0000);        //列首址0
1222   1      
1223   1        LCD_WriteCmd(0x0022);
1224   1      
1225   1        LCD_Display_Dir(TFTLCD_DIR);    //0：竖屏  1：横屏  默认竖屏
1226   1        LCD_Clear(BACK_COLOR);
1227   1      
1228   1      }
1229          
1230          //设置窗口,并自动设置画点坐标到窗口左上角(sx,sy).
1231          //sx,sy:窗口起始坐标(左上角)
1232          //width,height:窗口宽度和高度,必须大于0!!
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 21  

1233          //窗体大小:width*height. 
1234          void LCD_Set_Window(u16 sx,u16 sy,u16 width,u16 height)
1235          {
1236   1      #ifdef TFT20_HX8309
                u16 x,y,xy;
                x=(width<<8)|sx;
                y=(height<<8)|sy;
                xy = (sy<<8)|sx;
                if(tftlcd_data.dir==0)  
                {
                  LCD_WriteCmd(0x44);LCD_WriteData(x);
                  LCD_WriteCmd(0x45);LCD_WriteData(y);
                  LCD_WriteCmd(0x21);LCD_WriteData(xy); 
                }
                else
                {
                  xy = (sx<<8)|sy;
                  LCD_WriteCmd(0x45);LCD_WriteData(x);
                  LCD_WriteCmd(0x44);LCD_WriteData(y);
                  LCD_WriteCmd(0x21);LCD_WriteData(xy);
                }
                LCD_WriteCmd(0x22);
              #endif
1256   1      
1257   1      #ifdef TFT22_R61503B
                if(tftlcd_data.dir==0)  
                {
                  LCD_WriteCmd(0x0050);
                  LCD_WriteData(sx);       
                  LCD_WriteCmd(0x0051);
                  LCD_WriteData(width);  
                  LCD_WriteCmd(0x0052);
                  LCD_WriteData(sy);
                  LCD_WriteCmd(0x0053);
                  LCD_WriteData(height);
              
                  LCD_WriteCmd(0x0020);
                  LCD_WriteData(sx);
                  LCD_WriteCmd(0x0021);
                  LCD_WriteData(sy);
              
                  LCD_WriteCmd(0x0022);
                
                }
                else
                {
                  LCD_WriteCmd(0x0052);
                  LCD_WriteData(sx);       
                  LCD_WriteCmd(0x0053);
                  LCD_WriteData(width);  
                  LCD_WriteCmd(0x0050);
                  LCD_WriteData(sy);
                  LCD_WriteCmd(0x0051);
                  LCD_WriteData(height);
              
                  LCD_WriteCmd(0x0021);
                  LCD_WriteData(sx);
                  LCD_WriteCmd(0x0020);
                  LCD_WriteData(sy);
              
                  LCD_WriteCmd(0x0022);
                }
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 22  

              #endif
1296   1        
1297   1      #ifdef TFT22_ILI9225B
                if(tftlcd_data.dir==0)  
                {
                  LCD_WriteCmdData(0x0037, sx);
                  LCD_WriteCmdData(0x0036, width); 
                  LCD_WriteCmdData(0x0039, sy);
                  LCD_WriteCmdData(0x0038, height);
                
                  LCD_WriteCmdData(0x0020, sx);
                  LCD_WriteCmdData(0x0021, sy);
                
                  LCD_WriteCmd(0x0022);
                }
                else
                {
                  LCD_WriteCmdData(0x0039, sx);
                  LCD_WriteCmdData(0x0038, width); 
                  LCD_WriteCmdData(0x0037, sy);
                  LCD_WriteCmdData(0x0036, height);
                
                  LCD_WriteCmdData(0x0021, sx);
                  LCD_WriteCmdData(0x0020, sy);
                
                  LCD_WriteCmd(0x0022);
                }
              #endif
1323   1      
1324   1      #ifdef TFT24_ST7781R
                if(tftlcd_data.dir==0)  
                {
                  LCD_WriteCmdData(0x0050, sx); // Horizontal Address Start Position
                  LCD_WriteCmdData(0x0051, width); // Horizontal Address End Position
                  LCD_WriteCmdData(0x0052, sy); // Vertical Address Start Position
                  LCD_WriteCmdData(0x0053, height); // Vertical Address End Position
                
                  LCD_WriteCmdData(0x0020, sx); // Horizontal Address Start Position
                  LCD_WriteCmdData(0x0021, sy); // Vertical Address Start Position
                  LCD_WriteCmd(0x0022);   
                }
                else
                {
                  LCD_WriteCmdData(0x0052, sx); // Horizontal Address Start Position
                  LCD_WriteCmdData(0x0053, width); // Horizontal Address End Position
                  LCD_WriteCmdData(0x0050, sy); // Vertical Address Start Position
                  LCD_WriteCmdData(0x0051, height); // Vertical Address End Position
                
                  LCD_WriteCmdData(0x0021, sx); // Horizontal Address Start Position
                  LCD_WriteCmdData(0x0020, sy); // Vertical Address Start Position
                  LCD_WriteCmd(0x0022); 
                } 
              #endif
1348   1      
1349   1      #ifdef TFT26_R61509V
                if(tftlcd_data.dir==0)  
                {
                  LCD_WriteCmd(0x0210);   LCD_WriteData(sx);
                  LCD_WriteCmd(0x0211);   LCD_WriteData(width);
                  LCD_WriteCmd(0x0212);   LCD_WriteData(sy);
                  LCD_WriteCmd(0x0213);   LCD_WriteData(height);
                
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 23  

                  LCD_WriteCmd(0x0200);   LCD_WriteData(sx);
                  LCD_WriteCmd(0x0201);   LCD_WriteData(sy);
                
                  LCD_WriteCmd(0x0202);
                }
                else
                {
                  LCD_WriteCmd(0x0212);   LCD_WriteData(sx);
                  LCD_WriteCmd(0x0213);   LCD_WriteData(width);
                  LCD_WriteCmd(0x0210);   LCD_WriteData(sy);
                  LCD_WriteCmd(0x0211);   LCD_WriteData(height);
                
                  LCD_WriteCmd(0x0201);   LCD_WriteData(sx);
                  LCD_WriteCmd(0x0200);   LCD_WriteData(sy);
                
                  LCD_WriteCmd(0x0202);
                }
              #endif
1375   1      
1376   1      #ifdef TFT26_ILI9325D
                if(tftlcd_data.dir==0)  
                {
                  LCD_WriteCmdData(0x0050, sx); // Horizontal GRAM Start Address 
                  LCD_WriteCmdData(0x0051, width); // Horizontal GRAM End Address 
                  LCD_WriteCmdData(0x0052, sy); // Vertical GRAM Start Address 
                  LCD_WriteCmdData(0x0053, height); // Vertical GRAM Start Address 
                
                  LCD_WriteCmdData(0x0020, sx); // GRAM horizontal Address 
                  LCD_WriteCmdData(0x0021, sy); // GRAM Vertical Address
                  LCD_WriteCmd(0x0022);
                }
                else
                {
                  LCD_WriteCmdData(0x0052, sx); // Horizontal GRAM Start Address 
                  LCD_WriteCmdData(0x0053, width); // Horizontal GRAM End Address 
                  LCD_WriteCmdData(0x0050, sy); // Vertical GRAM Start Address 
                  LCD_WriteCmdData(0x0051, height); // Vertical GRAM Start Address 
                
                  LCD_WriteCmdData(0x0021, sx); // GRAM horizontal Address 
                  LCD_WriteCmdData(0x0020, sy); // GRAM Vertical Address
                  LCD_WriteCmd(0x0022);
                }
              #endif
1400   1      
1401   1      #ifdef TFT24_ST7789S
                  LCD_WriteCmd(0x2a);   
                  LCD_WriteData(sx>>8);
                  LCD_WriteData(sx&0xff);
                  LCD_WriteData(width>>8);
                  LCD_WriteData(width&0xff);
                
                  LCD_WriteCmd(0x2b);   
                  LCD_WriteData(sy>>8);
                  LCD_WriteData(sy&0xff);
                  LCD_WriteData(height>>8);
                  LCD_WriteData(height&0xff);
              
                  LCD_WriteCmd(0x2c);
              #endif
1416   1      
1417   1      #ifdef TFT24_SSD1297
1418   1          if(tftlcd_data.dir==0)
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 24  

1419   1          {
1420   2            LCD_WriteCmd(0x0044);LCD_WriteData(width<<8|sx);  
1421   2            LCD_WriteCmd(0x0045);LCD_WriteData(sy);     
1422   2            LCD_WriteCmd(0x0046);LCD_WriteData(height);   
1423   2            LCD_WriteCmd(0x004e);LCD_WriteData(sx);   
1424   2            LCD_WriteCmd(0x004f);LCD_WriteData(sy);   
1425   2            LCD_WriteCmd(0x0022);  
1426   2          }
1427   1          else
1428   1          {
1429   2            LCD_WriteCmd(0x0044);LCD_WriteData(height<<8|sy); 
1430   2            LCD_WriteCmd(0x0045);LCD_WriteData(sx);     
1431   2            LCD_WriteCmd(0x0046);LCD_WriteData(width);    
1432   2            LCD_WriteCmd(0x004e);LCD_WriteData(sy);   
1433   2            LCD_WriteCmd(0x004f);LCD_WriteData(sx);   
1434   2            LCD_WriteCmd(0x0022); 
1435   2          } 
1436   1      #endif
1437   1      
1438   1      #ifdef TFT20_ILI9225
                if(tftlcd_data.dir==0)  
                {
                  LCD_WriteCmdData(0x0037, sx);
                  LCD_WriteCmdData(0x0036, width); 
                  LCD_WriteCmdData(0x0039, sy);
                  LCD_WriteCmdData(0x0038, height);
                
                  LCD_WriteCmdData(0x0020, sx);
                  LCD_WriteCmdData(0x0021, sy);
                
                  LCD_WriteCmd(0x0022);
                }
                else
                {
                  LCD_WriteCmdData(0x0039, sx);
                  LCD_WriteCmdData(0x0038, width); 
                  LCD_WriteCmdData(0x0037, sy);
                  LCD_WriteCmdData(0x0036, height);
                
                  LCD_WriteCmdData(0x0021, sx);
                  LCD_WriteCmdData(0x0020, sy);
                
                  LCD_WriteCmd(0x0022);
                }
              #endif
1464   1      
1465   1      #ifdef TFT20_ILI9341
                  LCD_WriteCmd(0x2a);   
                  LCD_WriteData_Color(sx);
                  LCD_WriteData_Color(width);
                
                  LCD_WriteCmd(0x2b);   
                  LCD_WriteData_Color(sy);
                  LCD_WriteData_Color(height);
              
                  LCD_WriteCmd(0x2c);
              #endif
1476   1      
1477   1      #ifdef TFT20_ST7775R
                if(tftlcd_data.dir==0)  
                {
                  LCD_WriteCmd(0x36);LCD_WriteData(width); 
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 25  

                  LCD_WriteCmd(0x37);LCD_WriteData(sx); 
                  LCD_WriteCmd(0x38);LCD_WriteData(height); 
                  LCD_WriteCmd(0x39);LCD_WriteData(sy); 
                
                  LCD_WriteCmd(0x20);LCD_WriteData(sx);
                  LCD_WriteCmd(0x21);LCD_WriteData(sy);
                
                  LCD_WriteCmd(0x22);
                }
                else
                {
                  LCD_WriteCmd(0x36);LCD_WriteData(height); 
                  LCD_WriteCmd(0x37);LCD_WriteData(sy); 
                  LCD_WriteCmd(0x38);LCD_WriteData(width); 
                  LCD_WriteCmd(0x39);LCD_WriteData(sx); 
                
                  LCD_WriteCmd(0x20);LCD_WriteData(sy);
                  LCD_WriteCmd(0x21);LCD_WriteData(sx);
                
                  LCD_WriteCmd(0x22);
                }
              #endif
1503   1      
1504   1      #ifdef TFT20_ST7775RV
                if(tftlcd_data.dir==0)  
                {
                  LCD_WriteCmd(0x36);LCD_WriteData(width); 
                  LCD_WriteCmd(0x37);LCD_WriteData(sx); 
                  LCD_WriteCmd(0x38);LCD_WriteData(height); 
                  LCD_WriteCmd(0x39);LCD_WriteData(sy); 
                
                  LCD_WriteCmd(0x20);LCD_WriteData(sx);
                  LCD_WriteCmd(0x21);LCD_WriteData(sy);
                
                  LCD_WriteCmd(0x22);
                }
                else
                {
                  LCD_WriteCmd(0x36);LCD_WriteData(height); 
                  LCD_WriteCmd(0x37);LCD_WriteData(sy); 
                  LCD_WriteCmd(0x38);LCD_WriteData(width); 
                  LCD_WriteCmd(0x39);LCD_WriteData(sx); 
                
                  LCD_WriteCmd(0x20);LCD_WriteData(sy);
                  LCD_WriteCmd(0x21);LCD_WriteData(sx);
                
                  LCD_WriteCmd(0x22);
                }
              #endif
1530   1      
1531   1      #ifdef TFT20_ILI9225C
                if(tftlcd_data.dir==0)  
                {
                  LCD_WriteCmdData(0x0037, sx);
                  LCD_WriteCmdData(0x0036, width); 
                  LCD_WriteCmdData(0x0039, sy);
                  LCD_WriteCmdData(0x0038, height);
                
                  LCD_WriteCmdData(0x0020, sx);
                  LCD_WriteCmdData(0x0021, sy);
                
                  LCD_WriteCmd(0x0022);
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 26  

                }
                else
                {
                  LCD_WriteCmdData(0x0039, sx);
                  LCD_WriteCmdData(0x0038, width); 
                  LCD_WriteCmdData(0x0037, sy);
                  LCD_WriteCmdData(0x0036, height);
                
                  LCD_WriteCmdData(0x0021, sx);
                  LCD_WriteCmdData(0x0020, sy);
                
                  LCD_WriteCmd(0x0022);
                }
              #endif
1557   1      
1558   1      #ifdef TFT20_R61503U
                if(tftlcd_data.dir==0)  
                {
                  LCD_WriteCmdData(0x0050, sx); // Horizontal Address Start Position
                  LCD_WriteCmdData(0x0051, width); // Horizontal Address End Position
                  LCD_WriteCmdData(0x0052, sy); // Vertical Address Start Position
                  LCD_WriteCmdData(0x0053, height); // Vertical Address End Position
                
                  LCD_WriteCmdData(0x0020, sx); // Horizontal Address Start Position
                  LCD_WriteCmdData(0x0021, sy); // Vertical Address Start Position
                  LCD_WriteCmd(0x0022);   
                }
                else
                {
                  LCD_WriteCmdData(0x0052, sx); // Horizontal Address Start Position
                  LCD_WriteCmdData(0x0053, width); // Horizontal Address End Position
                  LCD_WriteCmdData(0x0050, sy); // Vertical Address Start Position
                  LCD_WriteCmdData(0x0051, height); // Vertical Address End Position
                
                  LCD_WriteCmdData(0x0021, sx); // Horizontal Address Start Position
                  LCD_WriteCmdData(0x0020, sy); // Vertical Address Start Position
                  LCD_WriteCmd(0x0022); 
                } 
              #endif
1582   1      
1583   1      #ifdef TFT20_HX8340B
                if(tftlcd_data.dir==0)
                {
                  LCD_WriteCmd(0x02);LCD_WriteData(sx>>8);     
                  LCD_WriteCmd(0x03);LCD_WriteData(sx&0xff);   
                  LCD_WriteCmd(0x04);LCD_WriteData(width>>8); 
                  LCD_WriteCmd(0x05);LCD_WriteData(width&0xff); 
                  
                  LCD_WriteCmd(0x06);LCD_WriteData(sy>>8); 
                  LCD_WriteCmd(0x07);LCD_WriteData(sy&0xff);
                  LCD_WriteCmd(0x08);LCD_WriteData(height>>8); 
                  LCD_WriteCmd(0x09);LCD_WriteData(height&0xff);
                }
                else
                {
                  LCD_WriteCmd(0x02);LCD_WriteData(sx>>8);     
                  LCD_WriteCmd(0x03);LCD_WriteData(sx&0xff);   
                  LCD_WriteCmd(0x04);LCD_WriteData(width>>8); 
                  LCD_WriteCmd(0x05);LCD_WriteData(width&0xff); 
                  
                  LCD_WriteCmd(0x06);LCD_WriteData(sy>>8); 
                  LCD_WriteCmd(0x07);LCD_WriteData(sy&0xff);
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 27  

                  LCD_WriteCmd(0x08);LCD_WriteData(height>>8); 
                  LCD_WriteCmd(0x09);LCD_WriteData(height&0xff);
                }   
                LCD_WriteCmd(0x22);
              #endif
1610   1      
1611   1      #ifdef TFT24_HX8357A
                if(tftlcd_data.dir==0)
                {
                  LCD_WriteCmd(0x02);LCD_WriteData(sx>>8);     
                  LCD_WriteCmd(0x03);LCD_WriteData(sx&0xff);   
                  LCD_WriteCmd(0x04);LCD_WriteData(width>>8); 
                  LCD_WriteCmd(0x05);LCD_WriteData(width&0xff); 
                  
                  LCD_WriteCmd(0x06);LCD_WriteData(sy>>8); 
                  LCD_WriteCmd(0x07);LCD_WriteData(sy&0xff);
                  LCD_WriteCmd(0x08);LCD_WriteData(height>>8); 
                  LCD_WriteCmd(0x09);LCD_WriteData(height&0xff);
                
                  LCD_WriteCmdData(0x80,sx>>8); // Set CAC=0x0000 
                  LCD_WriteCmdData(0x81,sx&0xff); 
                  LCD_WriteCmdData(0x82,sy>>8); // Set RAC=0x0000 
                  LCD_WriteCmdData(0x83,sy&0xff); 
                }
                else
                {
                  LCD_WriteCmd(0x06);LCD_WriteData(sx>>8);     
                  LCD_WriteCmd(0x07);LCD_WriteData(sx&0xff);   
                  LCD_WriteCmd(0x08);LCD_WriteData(width>>8); 
                  LCD_WriteCmd(0x09);LCD_WriteData(width&0xff); 
                  
                  LCD_WriteCmd(0x02);LCD_WriteData(sy>>8); 
                  LCD_WriteCmd(0x03);LCD_WriteData(sy&0xff);
                  LCD_WriteCmd(0x04);LCD_WriteData(height>>8); 
                  LCD_WriteCmd(0x05);LCD_WriteData(height&0xff);
                
                  LCD_WriteCmdData(0x82,sx>>8); // Set CAC=0x0000 
                  LCD_WriteCmdData(0x83,sx&0xff); 
                  LCD_WriteCmdData(0x80,sy>>8); // Set RAC=0x0000 
                  LCD_WriteCmdData(0x81,sy&0xff); 
                }
                LCD_WriteCmd(0x22);
              #endif
1648   1      
1649   1      #ifdef TFT18_S6D0144
                u16 x,y,xy;
                x=(width<<8)|sx;
                y=(height<<8)|sy;
                xy = (sy<<8)|sx;
                if(tftlcd_data.dir==0)
                {
                  LCD_WriteCmd(0x44);LCD_WriteData(width<<8|sx);       
                  LCD_WriteCmd(0x45);LCD_WriteData(height<<8|sy);   
                  LCD_WriteCmd(0x21);LCD_WriteData(sy<<8|sx); 
                }
                else
                {
                  xy = (sx<<8)|sy;
                  LCD_WriteCmd(0x45);LCD_WriteData(x);
                  LCD_WriteCmd(0x44);LCD_WriteData(y);
                  LCD_WriteCmd(0x21);LCD_WriteData(xy);
                }
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 28  

                  
                LCD_WriteCmd(0x22); 
              #endif
1670   1      }
1671          
1672          //读取个某点的颜色值   
1673          //x,y:坐标
1674          //返回值:此点的颜色
1675          u16 LCD_ReadPoint(u16 x,u16 y)
1676          {
1677   1        u16 r=0,g=0x0001,b=0x0001;
1678   1        u16 dat=0;
1679   1        if(x>=tftlcd_data.width||y>=tftlcd_data.height)return 0;  //超过了范围,直接返回        
1680   1        LCD_Set_Window(x, y, x, y);
1681   1        
1682   1      #ifdef TFT22_R61503B
                //LCD_Set_Window(x, y, x, y);
                dat=LCD_ReadData();     //dummy Read
                  dat=LCD_ReadData();
              
                  
                b=dat>>11;         
                g=(dat>>5)&0x003f;
                r=dat&0x001f;
                dat=(r<<11)|(g<<5)|(b); 
                                 
                r=dat;
                               
                
              #endif
1697   1      
1698   1      #ifdef TFT22_ILI9225B 
                LCD_WriteCmd(0X0022);                      
                r=LCD_ReadData();     //dummy Read
                r=LCD_ReadData();     //dummy Read
                r=LCD_ReadData();     //实际坐标颜色
              #endif
1704   1      
1705   1      #ifdef TFT24_ST7781R  
                LCD_WriteCmd(0X0022);
                r=LCD_ReadData();     //dummy Read                         
                r=LCD_ReadData();     //实际坐标颜色
              #endif
1710   1      
1711   1      #ifdef TFT26_R61509V  
                LCD_WriteCmd(0X0202);                      
                r=LCD_ReadData();     //dummy Read
                r=LCD_ReadData();     //dummy Read
                r=LCD_ReadData();     //实际坐标颜色
              #endif
1717   1        
1718   1      #ifdef TFT26_ILI9325D 
                LCD_WriteCmd(0X0022);
                r=LCD_ReadData();     //dummy Read                         
                r=LCD_ReadData();     //实际坐标颜色
              #endif
1723   1      
1724   1      #ifdef TFT24_ST7789S
                dat=LCD_ReadData();     //dummy Read
                  dat=LCD_ReadData();
                dat=dat<<8;
                  dat|=LCD_ReadData();
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 29  

                             
                r=dat;  
              #endif
1732   1      
1733   1      #ifdef TFT20_ILI9225  
                LCD_WriteCmd(0X0022);                      
                r=LCD_ReadData();     //dummy Read
                r=LCD_ReadData();     //dummy Read
                r=LCD_ReadData();     //实际坐标颜色
              #endif
1739   1      
1740   1      #ifdef TFT20_ILI9341  
                LCD_WriteCmd(0X2e);                      
                r=LCD_ReadData();     //dummy Read
                r=LCD_ReadData();     //实际坐标颜色
                g=LCD_ReadData();
                b=LCD_ReadData();
                return (((r>>11)<<11)|((g>>10)<<5)|(b>>11));      
              #endif
1748   1      
1749   1      #ifdef TFT20_ST7775R  
                LCD_WriteCmd(0X22);                      
                r=LCD_ReadData();     //dummy Read
                r=LCD_ReadData();     //dummy Read
                r=LCD_ReadData();     //实际坐标颜色
              #endif  
1755   1      
1756   1      #ifdef TFT20_ST7775RV 
                LCD_WriteCmd(0X22);                      
                r=LCD_ReadData();     //dummy Read
                r=LCD_ReadData();     //dummy Read
                r=LCD_ReadData();     //实际坐标颜色
              #endif
1762   1      
1763   1      #ifdef TFT20_ILI9225C 
                LCD_WriteCmd(0X0022);                      
                r=LCD_ReadData();     //dummy Read
                r=LCD_ReadData();     //dummy Read
                r=LCD_ReadData();     //实际坐标颜色
              #endif
1769   1      
1770   1      #ifdef TFT20_R61503U  
                LCD_WriteCmd(0X0022);                      
                r=LCD_ReadData();     //dummy Read
                r=LCD_ReadData();     //dummy Read
                r=LCD_ReadData();     //实际坐标颜色
              #endif
1776   1      
1777   1      #ifdef TFT20_HX8340B  
                LCD_WriteCmd(0X22);                      
                r=LCD_ReadData();     //dummy Read
                r=LCD_ReadData();     //实际坐标颜色
                g=LCD_ReadData();
                b=LCD_ReadData();
                return (((r>>11)<<11)|((g>>10)<<5)|(b>>11));      
              #endif
1785   1      
1786   1        return r;
1787   1      }
1788          
1789          //清屏函数
1790          //color:要清屏的填充色
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 30  

1791          void LCD_Clear(u16 color)
1792          {
1793   1        u16 i=0, j=0 ;
1794   1      
1795   1        LCD_Set_Window(0, 0, tftlcd_data.width-1, tftlcd_data.height-1);   //作用区域
1796   1          for(i=0; i<tftlcd_data.width; i++)
1797   1        {
1798   2          for (j=0; j<tftlcd_data.height; j++)
1799   2          {
1800   3            LCD_WriteData_Color(color);
1801   3          }
1802   2        } 
1803   1      }
1804          
1805          //在指定区域内填充单个颜色
1806          //(sx,sy),(ex,ey):填充矩形对角坐标,区域大小为:(ex-sx+1)*(ey-sy+1)   
1807          //color:要填充的颜色
1808          void LCD_Fill(u16 xState,u16 yState,u16 xEnd,u16 yEnd,u16 color)
1809          {          
1810   1        u16 temp=0;
1811   1      
1812   1          if((xState > xEnd) || (yState > yEnd))
1813   1          {
1814   2              return;
1815   2          }   
1816   1        LCD_Set_Window(xState, yState, xEnd, yEnd); 
1817   1          xState = xEnd - xState + 1;
1818   1        yState = yEnd - yState + 1;
1819   1      
1820   1        while(xState--)
1821   1        {
1822   2          temp = yState;
1823   2          while (temp--)
1824   2          {     
1825   3            LCD_WriteData_Color(color); 
1826   3          }
1827   2        } 
1828   1      } 
1829          
1830          //在指定区域内填充指定颜色块       
1831          //(sx,sy),(ex,ey):填充矩形对角坐标,区域大小为:(ex-sx+1)*(ey-sy+1)   
1832          //color:要填充的颜色
1833          void LCD_Color_Fill(u16 sx,u16 sy,u16 ex,u16 ey,u16 *color)
1834          {  
1835   1        u16 height,width;
1836   1        u16 i,j;
1837   1        width=ex-sx+1;      //得到填充的宽度
1838   1        height=ey-sy+1;     //高度
1839   1        LCD_Set_Window(sx, sy,ex, ey);
1840   1        for(i=0;i<height;i++)
1841   1        {
1842   2          for(j=0;j<width;j++)
1843   2          {
1844   3            LCD_WriteData_Color(color[i*width+j]);
1845   3          }
1846   2        }       
1847   1      }
1848          
1849          //画点
1850          //x,y:坐标
1851          //FRONT_COLOR:此点的颜色
1852          void LCD_DrawPoint(u16 x,u16 y)
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 31  

1853          {
1854   1        LCD_Set_Window(x, y, x, y);  //设置点的位置
1855   1        LCD_WriteData_Color(FRONT_COLOR); 
1856   1      }
1857          
1858          //快速画点
1859          //x,y:坐标
1860          //color:颜色
1861          void LCD_DrawFRONT_COLOR(u16 x,u16 y,u16 color)
1862          {    
1863   1        LCD_Set_Window(x, y, x, y);
1864   1        LCD_WriteData_Color(color); 
1865   1      } 
1866          
1867          //画一个大点
1868          //2*2的点        
1869          void LCD_DrawBigPoint(u16 x,u16 y,u16 color)
1870          {     
1871   1        LCD_DrawFRONT_COLOR(x,y,color);//中心点 
1872   1        LCD_DrawFRONT_COLOR(x+1,y,color);
1873   1        LCD_DrawFRONT_COLOR(x,y+1,color);
1874   1        LCD_DrawFRONT_COLOR(x+1,y+1,color);       
1875   1      }
1876          
1877          //画线
1878          //x1,y1:起点坐标
1879          //x2,y2:终点坐标  
1880          void LCD_DrawLine(u16 x1, u16 y1, u16 x2, u16 y2)
1881          {
1882   1        u16 t=0; 
1883   1        int xerr=0,yerr=0,delta_x,delta_y,distance; 
1884   1        int incx,incy,uRow,uCol; 
1885   1        delta_x=x2-x1; //计算坐标增量 
1886   1        delta_y=y2-y1; 
1887   1        uRow=x1; 
1888   1        uCol=y1; 
1889   1        if(delta_x>0)incx=1; //设置单步方向 
1890   1        else if(delta_x==0)incx=0;//垂直线 
1891   1        else {incx=-1;delta_x=-delta_x;} 
1892   1        if(delta_y>0)incy=1; 
1893   1        else if(delta_y==0)incy=0;//水平线 
1894   1        else{incy=-1;delta_y=-delta_y;} 
1895   1        if( delta_x>delta_y)distance=delta_x; //选取基本增量坐标轴 
1896   1        else distance=delta_y; 
1897   1        for(t=0;t<=distance+1;t++ )//画线输出 
1898   1        {  
1899   2          LCD_DrawPoint(uRow,uCol);//画点 
1900   2          xerr+=delta_x ; 
1901   2          yerr+=delta_y ; 
1902   2          if(xerr>distance) 
1903   2          { 
1904   3            xerr-=distance; 
1905   3            uRow+=incx; 
1906   3          } 
1907   2          if(yerr>distance) 
1908   2          { 
1909   3            yerr-=distance; 
1910   3            uCol+=incy; 
1911   3          } 
1912   2        }  
1913   1      } 
1914          
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 32  

1915          void LCD_DrawLine_Color(u16 x1, u16 y1, u16 x2, u16 y2,u16 color)
1916          {
1917   1        u16 t; 
1918   1        int xerr=0,yerr=0,delta_x,delta_y,distance; 
1919   1        int incx,incy,uRow,uCol; 
1920   1        delta_x=x2-x1; //计算坐标增量 
1921   1        delta_y=y2-y1; 
1922   1        uRow=x1; 
1923   1        uCol=y1; 
1924   1        if(delta_x>0)incx=1; //设置单步方向 
1925   1        else if(delta_x==0)incx=0;//垂直线 
1926   1        else {incx=-1;delta_x=-delta_x;} 
1927   1        if(delta_y>0)incy=1; 
1928   1        else if(delta_y==0)incy=0;//水平线 
1929   1        else{incy=-1;delta_y=-delta_y;} 
1930   1        if( delta_x>delta_y)distance=delta_x; //选取基本增量坐标轴 
1931   1        else distance=delta_y; 
1932   1        for(t=0;t<=distance+1;t++ )//画线输出 
1933   1        {  
1934   2          LCD_DrawFRONT_COLOR(uRow,uCol,color);//画点 
1935   2          xerr+=delta_x ; 
1936   2          yerr+=delta_y ; 
1937   2          if(xerr>distance) 
1938   2          { 
1939   3            xerr-=distance; 
1940   3            uRow+=incx; 
1941   3          } 
1942   2          if(yerr>distance) 
1943   2          { 
1944   3            yerr-=distance; 
1945   3            uCol+=incy; 
1946   3          } 
1947   2        }  
1948   1      } 
1949          
1950          
1951          // 画一个十字的标记
1952          // x：标记的X坐标
1953          // y：标记的Y坐标
1954          // color：标记的颜色
1955          void LCD_DrowSign(u16 x, u16 y, u16 color)
1956          {
1957   1          u8 i;
1958   1      
1959   1          /* 画点 */
1960   1          LCD_Set_Window(x-1, y-1, x+1, y+1);
1961   1          for(i=0; i<9; i++)
1962   1          {
1963   2          LCD_WriteData_Color(color);   
1964   2          }
1965   1      
1966   1          /* 画竖 */
1967   1          LCD_Set_Window(x-4, y, x+4, y);
1968   1          for(i=0; i<9; i++)
1969   1          {
1970   2          LCD_WriteData_Color(color); 
1971   2          }
1972   1      
1973   1          /* 画横 */
1974   1          LCD_Set_Window(x, y-4, x, y+4);
1975   1          for(i=0; i<9; i++)
1976   1          {
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 33  

1977   2          LCD_WriteData_Color(color); 
1978   2          }
1979   1      }
1980          
1981          //画矩形    
1982          //(x1,y1),(x2,y2):矩形的对角坐标
1983          void LCD_DrawRectangle(u16 x1, u16 y1, u16 x2, u16 y2)
1984          {
1985   1        LCD_DrawLine(x1,y1,x2,y1);
1986   1        LCD_DrawLine(x1,y1,x1,y2);
1987   1        LCD_DrawLine(x1,y2,x2,y2);
1988   1        LCD_DrawLine(x2,y1,x2,y2);
1989   1      }
1990          //在指定位置画一个指定大小的圆
1991          //(x,y):中心点
1992          //r    :半径
1993          void LCD_Draw_Circle(u16 x0,u16 y0,u8 r)
1994          {
1995   1        int a,b;
1996   1        int di;
1997   1        a=0;b=r;    
1998   1        di=3-(r<<1);             //判断下个点位置的标志
1999   1        while(a<=b)
2000   1        {
2001   2          LCD_DrawPoint(x0+a,y0-b);             //5
2002   2          LCD_DrawPoint(x0+b,y0-a);             //0           
2003   2          LCD_DrawPoint(x0+b,y0+a);             //4               
2004   2          LCD_DrawPoint(x0+a,y0+b);             //6 
2005   2          LCD_DrawPoint(x0-a,y0+b);             //1       
2006   2          LCD_DrawPoint(x0-b,y0+a);             
2007   2          LCD_DrawPoint(x0-a,y0-b);             //2             
2008   2            LCD_DrawPoint(x0-b,y0-a);             //7                
2009   2          a++;
2010   2          //使用Bresenham算法画圆     
2011   2          if(di<0)di +=4*a+6;   
2012   2          else
2013   2          {
2014   3            di+=10+4*(a-b);   
2015   3            b--;
2016   3          }                 
2017   2        }
2018   1      } 
2019          
2020          
2021          //在指定位置显示一个字符
2022          //x,y:起始坐标
2023          //num:要显示的字符:" "--->"~"
2024          //size:字体大小 12/16/24
2025          //mode:叠加方式(1)还是非叠加方式(0)
2026          void LCD_ShowChar(u16 x,u16 y,u8 num,u8 size,u8 mode)
2027          {                 
2028   1          u8 temp,t1,t;
2029   1        u16 y0=y;
2030   1        u8 csize=(size/8+((size%8)?1:0))*(size/2);    //得到字体一个字符对应点阵集所占的字节数  
2031   1        num=num-' ';//得到偏移后的值（ASCII字库是从空格开始取模，所以-' '就是对应字符的字库）
2032   1        for(t=0;t<csize;t++)
2033   1        {   
2034   2          if(size==12)temp=ascii_1206[num][t];    //调用1206字体
2035   2          else if(size==16)temp=ascii_1608[num][t]; //调用1608字体
2036   2          else if(size==24)temp=ascii_2412[num][t]; //调用2412字体
2037   2          else return;                //没有的字库
2038   2          for(t1=0;t1<8;t1++)
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 34  

2039   2          {         
2040   3            if(temp&0x80)LCD_DrawFRONT_COLOR(x,y,FRONT_COLOR);
2041   3            else if(mode==0)LCD_DrawFRONT_COLOR(x,y,BACK_COLOR);
2042   3            temp<<=1;
2043   3            y++;
2044   3            if(y>=tftlcd_data.height)return;    //超区域了
2045   3            if((y-y0)==size)
2046   3            {
2047   4              y=y0;
2048   4              x++;
2049   4              if(x>=tftlcd_data.width)return; //超区域了
2050   4              break;
2051   4            }
2052   3          }    
2053   2        }                 
2054   1      }   
2055          //m^n函数
2056          //返回值:m^n次方.
2057          u32 LCD_Pow(u8 m,u8 n)
2058          {
2059   1        u32 result=1;  
2060   1        while(n--)result*=m;    
2061   1        return result;
2062   1      }      
2063          //显示数字,高位为0,则不显示
2064          //x,y :起点坐标  
2065          //len :数字的位数
2066          //size:字体大小
2067          //color:颜色 
2068          //num:数值(0~4294967295);  
2069          void LCD_ShowNum(u16 x,u16 y,u32 num,u8 len,u8 size)
2070          {           
2071   1        u8 t,temp;
2072   1        u8 enshow=0;               
2073   1        for(t=0;t<len;t++)
2074   1        {
2075   2          temp=(num/LCD_Pow(10,len-t-1))%10;
2076   2          if(enshow==0&&t<(len-1))
2077   2          {
2078   3            if(temp==0)
2079   3            {
2080   4              LCD_ShowChar(x+(size/2)*t,y,' ',size,0);
2081   4              continue;
2082   4            }else enshow=1; 
2083   3             
2084   3          }
2085   2          LCD_ShowChar(x+(size/2)*t,y,temp+'0',size,0); 
2086   2        }
2087   1      } 
2088          
2089          //显示数字,高位为0,还是显示
2090          //x,y:起点坐标
2091          //num:数值(0~999999999);   
2092          //len:长度(即要显示的位数)
2093          //size:字体大小
2094          //mode:
2095          //[7]:0,不填充;1,填充0.
2096          //[6:1]:保留
2097          //[0]:0,非叠加显示;1,叠加显示.
2098          void LCD_ShowxNum(u16 x,u16 y,u32 num,u8 len,u8 size,u8 mode)
2099          {  
2100   1        u8 t,temp;
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 35  

2101   1        u8 enshow=0;               
2102   1        for(t=0;t<len;t++)
2103   1        {
2104   2          temp=(num/LCD_Pow(10,len-t-1))%10;
2105   2          if(enshow==0&&t<(len-1))
2106   2          {
2107   3            if(temp==0)
2108   3            {
2109   4              if(mode&0X80)LCD_ShowChar(x+(size/2)*t,y,'0',size,mode&0X01);  
2110   4              else LCD_ShowChar(x+(size/2)*t,y,' ',size,mode&0X01);  
2111   4              continue;
2112   4            }else enshow=1; 
2113   3             
2114   3          }
2115   2          LCD_ShowChar(x+(size/2)*t,y,temp+'0',size,mode&0X01); 
2116   2        }
2117   1      } 
2118          //显示字符串
2119          //x,y:起点坐标
2120          //width,height:区域大小  
2121          //size:字体大小
2122          //*p:字符串起始地址     
2123          void LCD_ShowString(u16 x,u16 y,u16 width,u16 height,u8 size,u8 *p)
2124          {         
2125   1        u8 x0=x;
2126   1        width+=x;
2127   1        height+=y;
2128   1          while((*p<='~')&&(*p>=' '))//判断是不是非法字符!
2129   1          {       
2130   2              if(x>=width){x=x0;y+=size;}
2131   2              if(y>=height)break;//退出
2132   2              LCD_ShowChar(x,y,*p,size,0);
2133   2              x+=size/2;
2134   2              if(*p == ':')
2135   2                printf("x=%d,y=%d\r\n",(u16)x,(u16)y);
2136   2              p++;
2137   2          }
2138   1      }
2139          
2140          /****************************************************************************
2141          *函数名：LCD_ShowFontHZ
2142          *输  入：x：汉字显示的X坐标
2143          *      * y：汉字显示的Y坐标
2144          *      * cn：要显示的汉字
2145          *      * wordColor：文字的颜色
2146          *      * backColor：背景颜色
2147          *输  出：
2148          *功  能：写二号楷体汉字
2149          ****************************************************************************/
2150          #if 1
2151          void LCD_ShowFontHZ(u16 x, u16 y, u8 *cn)  
2152          {  
2153   1        u8 i, j, wordNum;
2154   1        u16 color;
2155   1        while (*cn != '\0')
2156   1        {
2157   2          LCD_Set_Window(x, y, x+31, y+28);
2158   2          for (wordNum=0; wordNum<20; wordNum++)
2159   2          { //wordNum扫描字库的字数
2160   3            if ((CnChar32x29[wordNum].Index[0]==*cn)
2161   3                 &&(CnChar32x29[wordNum].Index[1]==*(cn+1)))
2162   3            {
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 36  

2163   4              
2164   4              for(i=0; i<116; i++) 
2165   4              { //MSK的位数
2166   5                color=CnChar32x29[wordNum].Msk[i];
2167   5                for(j=0;j<8;j++) 
2168   5                {
2169   6                  if((color&0x80)==0x80)
2170   6                  {
2171   7                    LCD_WriteData_Color(FRONT_COLOR);             
2172   7                  }             
2173   6                  else
2174   6                  {
2175   7                    LCD_WriteData_Color(BACK_COLOR); 
2176   7                  } 
2177   6                  color<<=1;
2178   6                }//for(j=0;j<8;j++)结束
2179   5              }    
2180   4            }
2181   3          } //for (wordNum=0; wordNum<20; wordNum++)结束  
2182   2          cn += 2;
2183   2          x += 32;
2184   2        }
2185   1      }
2186          #endif
2187          
2188          
2189          #if 0
              void LCD_ShowFontHZ(u16 x, u16 y, u8 *cn)
              {
                u8 i, j, wordNum;
                u16 color;
                u16 x0=x; 
                u16 y0=y; 
                while (*cn != '\0')
                {
                  for (wordNum=0; wordNum<20; wordNum++)
                  { //wordNum扫描字库的字数
                    if ((CnChar32x29[wordNum].Index[0]==*cn)
                         &&(CnChar32x29[wordNum].Index[1]==*(cn+1)))
                    {
                      for(i=0; i<116; i++) 
                      { //MSK的位数
                        color=CnChar32x29[wordNum].Msk[i];
                        for(j=0;j<8;j++) 
                        {
                          if((color&0x80)==0x80)
                          {
                            LCD_DrawFRONT_COLOR(x,y,FRONT_COLOR);
                          }             
                          else
                          {
                            LCD_DrawFRONT_COLOR(x,y,BACK_COLOR);
                          } 
                          color<<=1;
                          x++;
                          if((x-x0)==32)
                          {
                            x=x0;
                            y++;
                            if((y-y0)==29)
                            {
                              y=y0;
C51 COMPILER V9.60.0.0   TFTLCD                                                            06/12/2022 21:53:21 PAGE 37  

                            }
                          }
                        }//for(j=0;j<8;j++)结束
                      } 
                    }
                    
                  } //for (wordNum=0; wordNum<20; wordNum++)结束  
                  cn += 2;
                  x += 32;
                  x0=x;
                }
              } 
              #endif
2238          
2239          void LCD_ShowPicture(u16 x, u16 y, u16 wide, u16 high,u8 *pic)
2240          {
2241   1        u16 temp = 0;
2242   1        long tmp=0,num=0;
2243   1        LCD_Set_Window(x, y, x+wide-1, y+high-1);
2244   1        num = wide * high*2 ;
2245   1        do
2246   1        {  
2247   2          temp = pic[tmp + 1];
2248   2          temp = temp << 8;
2249   2          temp = temp | pic[tmp];
2250   2          LCD_WriteData_Color(temp);//逐点显示
2251   2          tmp += 2;
2252   2        }
2253   1        while(tmp < num); 
2254   1      }
2255          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   5616    ----
   CONSTANT SIZE    =   7154    ----
   XDATA SIZE       =     11     238
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
